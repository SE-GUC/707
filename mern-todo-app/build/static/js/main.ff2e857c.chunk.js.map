{"version":3,"sources":["logo.png","components/create-account.component.js","components/sign-in.component.js","components/ViewProjects.component.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Createuser","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangeuserName","bind","assertThisInitialized","onChangeuserEmail","onChangeuserPassword","onChangeType","onSubmit","state","name","email","password","type","e","setState","target","value","preventDefault","console","log","concat","user","axios","post","then","res","data","react_default","a","createElement","style","marginTop","className","onChange","id","checked","Component","Loginuser","renderRedirect","redirect","react_router_dom","react_router","to","exact","path","component","CreateAccount","_this2","cookies","Cookies","status","set","onClick","require","AdminProjects","projects","token","get","headers","Authorization","map","project","description","tasks","App","class","href","src","logo","width","height","alt","SignIn","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ff2e857c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6e43d8d5.png\";","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nexport default class Createuser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeuserName = this.onChangeuserName.bind(this);\r\n        this.onChangeuserEmail = this.onChangeuserEmail.bind(this);\r\n        this.onChangeuserPassword = this.onChangeuserPassword.bind(this);\r\n        this.onChangeType=this.onChangeType.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            type:''\r\n         //   todo_completed: false\r\n        }\r\n    }\r\n\r\n    onChangeuserName(e) {\r\n        this.setState({\r\n            name: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeuserEmail(e) {\r\n        this.setState({\r\n            email: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeuserPassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n    onChangeType(e) {\r\n\r\n        this.setState({\r\n            type: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        \r\n        console.log(`Form submitted:`);\r\n        console.log(`Name: ${this.state.name}`);\r\n        console.log(`Email: ${this.state.email}`);\r\n        console.log(`Password: ${this.state.password}`);\r\n        const user = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            password: this.state.password\r\n            //todo_completed: this.state.todo_completed\r\n        };\r\n        // axios.post('http://localhost:5000/api/'+this.state.type+'/register', user)\r\n//https://lirtenhub-707.herokuapp.com/api/\r\n        console.log(this.state.type)\r\n        axios.post('https://lirtenhub-707.herokuapp.com/api/'+this.state.type+'/register', user)\r\n            .then(res => console.log(res.data));\r\n            this.setState({\r\n                name: '',\r\n                email: '',\r\n                password: '',\r\n                type:''\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{marginTop: 10}}>\r\n                <h3>Register New User</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\"> \r\n                        <label>Name: </label>\r\n                        <input  type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={this.state.name}\r\n                                onChange={this.onChangeuserName}\r\n                                />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Email: </label>\r\n                        <input \r\n                                type=\"text\" \r\n                                className=\"form-control\"\r\n                                value={this.state.email}\r\n                                onChange={this.onChangeuserEmail}\r\n                                />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label>Password: </label>\r\n                            <input   type=\"password\" \r\n                                    className=\"form-control\"\r\n                                    value={this.state.password}\r\n\r\n                                    onChange={this.onChangeuserPassword}\r\n                                    />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <input  className=\"form-check-input\" \r\n                                        type=\"radio\" \r\n                                        name=\"priorityOptions\" \r\n                                        id=\"candidates\" \r\n                                        value=\"candidates\"\r\n                                        checked={this.state.type==='candidates'} \r\n                                        onChange={this.onChangeType}\r\n                                        />\r\n                                <label className=\"form-check-label\">Candidate</label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <input  className=\"form-check-input\" \r\n                                        type=\"radio\" \r\n                                        name=\"priorityOptions\" \r\n                                        id=\"partners\" \r\n                                        value=\"partners\" \r\n                                        checked={this.state.type==='partners'} \r\n                                        onChange={this.onChangeType}\r\n                                        />\r\n                                <label className=\"form-check-label\">Partner</label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <input  className=\"form-check-input\" \r\n                                        type=\"radio\" \r\n                                        name=\"priorityOptions\" \r\n                                        id=\"consultancies\" \r\n                                        value=\"consultancies\" \r\n                                        checked={this.state.type==='consultancies'} \r\n                                        onChange={this.onChangeType}\r\n                                        />\r\n                                <label className=\"form-check-label\">Consultancy</label>\r\n                            </div>\r\n                        </div>\r\n                         \r\n                       \r\n                   \r\n\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Create Account\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Cookies from 'universal-cookie';\r\nimport CreateAccount from \"./create-account.component.js\";\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\r\n\r\nexport default class Loginuser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeuserEmail = this.onChangeuserEmail.bind(this);\r\n        this.onChangeuserPassword = this.onChangeuserPassword.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n \r\n\r\n    onChangeuserEmail(e) {\r\n        this.setState({\r\n            email: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeuserPassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n   \r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        \r\n      \r\n        const user = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        };\r\n\r\n        const cookies = new Cookies();\r\n        axios.post('https://lirtenhub-707.herokuapp.com/api/login', user)\r\n            .then((res) =>{\r\n                if(res.status==200){\r\n                    this.setState({redirect: true});\r\n                    cookies.set('token', res.data, {path: '/'})}\r\n                    \r\n            });\r\n            \r\n            this.setState({\r\n                email: '',\r\n                password: ''\r\n               \r\n            })\r\n            \r\n    }\r\n    renderRedirect = () => {\r\n        if (this.state.redirect) {\r\n          return(\r\n            <Router>\r\n                <Redirect to = \"/createaccount\" />\r\n                <Route exact path=\"/createaccount\" component={CreateAccount} />\r\n               \r\n                </Router>\r\n          );\r\n            \r\n        }\r\n      }\r\n\r\n\r\n    render() {\r\n                        \r\n        return (\r\n            <Router>\r\n\r\n            <div style={{marginTop: 10}}>\r\n                <h3>Login</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                \r\n                    <div className=\"form-group\">\r\n                        <label>Email: </label>\r\n                        <input \r\n                                type=\"text\" \r\n                                className=\"form-control\"\r\n                                value={this.state.email}\r\n                                onChange={this.onChangeuserEmail}\r\n                                />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label>Password: </label>\r\n                            <input   type=\"password\" \r\n                                    className=\"form-control\"\r\n                                    value={this.state.password}\r\n\r\n                                    onChange={this.onChangeuserPassword}\r\n                                    />\r\n                            \r\n                        </div>\r\n                       \r\n                   \r\n\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Login\" className=\"btn btn-primary\" onClick={this.renderRedirect}/>\r\n                       \r\n                    \r\n                    </div>\r\n                </form>\r\n                \r\n\r\n            </div>\r\n            </Router>\r\n\r\n            \r\n        )\r\n        \r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Cookies from 'universal-cookie';\r\nconst axios = require(\"axios\");\r\n\r\n\r\nexport default class AdminProjects extends Component {\r\n    \r\n    state = {\r\n        projects: []\r\n      }\r\n   \r\n      componentDidMount() {\r\n         const cookies = new Cookies();\r\n         const token= cookies.get('token')\r\n        axios.get('https://lirtenhub-707.herokuapp.com/api/admins/get/projects', { headers: {\r\n            Authorization: token}\r\n          })\r\n          .then(res => {\r\n            const projects = res.data.data;\r\n            this.setState({ projects });\r\n          })\r\n      }\r\n   \r\n      render() {\r\n        return (\r\n          <ul>\r\n            { this.state.projects.map(project => <li>\r\n                <p>Project Name: {project.name}<br></br>\r\n                Project Description: {project.description}<br></br>\r\n                Project Type: {project.type}<br></br>\r\n               Tasks: {project.tasks}<br></br>\r\n               \r\n            </p>   </li>)}\r\n          </ul>\r\n        )\r\n      }\r\n    };","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport CreateAccount from \"./components/create-account.component.js\";\r\nimport SignIn from \"./components/sign-in.component.js\";\r\nimport AdminProjects  from \"./components/ViewProjects.component.js\";\r\n\r\n\r\n\r\nimport logo from \"./logo.png\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"container\">\r\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <a class=\"navbar-brand\" href=\"http://localhost:3000/\" target=\"_blank\">\r\n              <img src={logo} width=\"287px\" height=\"100px\" alt=\"LirtenHub-Logo\" />\r\n            </a>\r\n            <div className=\"collpase navbar-collapse\">\r\n              <ul className=\"navbar-nav mr-auto\">\r\n                <li className=\"navbar-item\">  \r\n                  <Link to=\"/\" className=\"nav-link\">Home</Link>\r\n                </li>\r\n                <li className=\"navbar-item\">\r\n                  <Link to=\"/createaccount\" className=\"nav-link\">Register to LirtenHub</Link>\r\n                </li>\r\n                <li className=\"navbar-item\">\r\n                  <Link to=\"/login\" className=\"nav-link\">Login</Link>\r\n                </li>\r\n                <li className=\"navbar-item\">\r\n                  <Link to=\"/adminProject\" className=\"nav-link\">view all admin projects</Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n          <br/>\r\n\r\n          <Route path=\"/createaccount\" component={CreateAccount} />\r\n          <Route path=\"/login\" component={SignIn}/>\r\n          <Route path=\"/adminProject\" component={AdminProjects}/>   \r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}